-- Natural Numbers
inductive Nat :: Type 1 := z :: Nat | s :: Nat -> Nat

-- Lists
inductive List (a :: Type 1) :: Type 1 := nil :: forall a :: Type 1, List a | cons :: forall a :: Type 1, a -> List a -> List a

-- Length indexed vectors
inductive Vect (a :: Type 1) (n :: Nat) :: Type 1 := vnil :: forall a :: Type 1, Vect a z | vcons :: forall a :: Type 1, forall k :: Nat, a -> Vect a k -> Vect a (s k)

-- Dependent Pairs
inductive DPair (a :: Type 1) (p :: a -> Type 1) := mkPair :: forall a :: Type 1, forall p :: (a -> Type 1), forall x :: a, forall pf :: p x, DPair a p